DROP TABLE IF EXISTS LINEA_PROYECCION;
DROP TABLE IF EXISTS PROYECCION_VENTA;
DROP TABLE IF EXISTS POLITICA_DE_STOCK;
DROP TABLE IF EXISTS DETALLE_ALMACEN_PRODUCTO;
DROP TABLE IF EXISTS DETALLE_ALMACEN_INSUMO;
DROP TABLE IF EXISTS ALMACEN;
DROP TABLE IF EXISTS LINEA_ORDEN;
DROP TABLE IF EXISTS ORDEN_PRODUCCION;
DROP TABLE IF EXISTS DETALLE_MAQUINARIA;
DROP TABLE IF EXISTS MAQUINARIA;
DROP TABLE IF EXISTS PLAN_MAESTRO_PRODUCCION;
DROP TABLE IF EXISTS PRODUCTO;
DROP TABLE IF EXISTS LINEA_INSUMO;
DROP TABLE IF EXISTS INSTRUCTIVO;
DROP TABLE IF EXISTS INSUMO;
DROP TABLE IF EXISTS TRABAJADOR;
DROP TABLE IF EXISTS USUARIO;
DROP TABLE IF EXISTS ROL;

CREATE TABLE ROL(
	ID_ROL INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPCION VARCHAR(50)
);

CREATE TABLE USUARIO(
	ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(50),
    CONTRASENA VARCHAR(50),
	ACTIVO INT
);

CREATE TABLE TRABAJADOR(
	ID_TRABAJADOR INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRES VARCHAR(100),
    APELLIDOS VARCHAR(100),
    DNI VARCHAR(8),
    CORREO VARCHAR(100),
    FK_ID_ROL INT,
    FK_ID_USUARIO INT,
	
    FOREIGN KEY (FK_ID_ROL) REFERENCES ROL(ID_ROL),
    FOREIGN KEY (FK_ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    CONSTRAINT DNI_CLIENTE UNIQUE (DNI)
)ENGINE=INNODB;

CREATE TABLE INSUMO(
	ID_INSUMO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(50),
    GRANULARIDAD FLOAT,
    COLOR VARCHAR(30),
    CANTIDAD FLOAT,
    UNIDAD VARCHAR(20)
);

CREATE TABLE INSTRUCTIVO(
	ID_INSTRUCTIVO INT AUTO_INCREMENT PRIMARY KEY,
    ACTIVIDADES VARCHAR(200),
	
);

CREATE TABLE LINEA_INSUMO(
	ID_LINEA_INS INT AUTO_INCREMENT PRIMARY KEY,
    FK_ID_INSUMO INT,
    FK_ID_INSTRUCTIVO INT,
    CANTIDAD INT,
    ESTADO INT,
    FOREIGN KEY (FK_ID_INSUMO) REFERENCES INSUMO(ID_INSUMO),
    FOREIGN KEY (FK_ID_INSTRUCTIVO) REFERENCES INSTRUCTIVO(ID_INSTRUCTIVO)
);

CREATE TABLE PRODUCTO(
	ID_PROD INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(50),
    GRANULARIDAD FLOAT,
    PRESENTACION VARCHAR(40),
    FK_ID_INSTRUCTIVO INT,
	FOREIGN KEY (FK_ID_INSTRUCTIVO) REFERENCES INSTRUCTIVO(ID_INSTRUCTIVO)
);

CREATE TABLE PLAN_MAESTRO_PRODUCCION(
	ID_PMP INT AUTO_INCREMENT PRIMARY KEY,
    PERIODO DATE,
    ESTADO INT,
    FK_ID_TRABAJADOR INT,
    FOREIGN KEY (FK_ID_TRABAJADOR) REFERENCES TRABAJADOR(ID_TRABAJADOR)
)ENGINE=INNODB;

CREATE TABLE MAQUINARIA(
	ID_MAQUINARIA INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(50),
    TIPO VARCHAR(20)
);

CREATE TABLE DETALLE_MAQUINARIA(
	ID_DET_MAQ INT AUTO_INCREMENT PRIMARY KEY,
	ESTADO INT,
    FECHA DATE,
    FK_ID_PMP INT,
    FK_ID_MAQUINARIA INT,
	FOREIGN KEY (FK_ID_MAQUINARIA) REFERENCES MAQUINARIA(ID_MAQUINARIA),
	FOREIGN KEY (FK_ID_PMP) REFERENCES PLAN_MAESTRO_PRODUCCION(ID_PMP)
);

CREATE TABLE ORDEN_PRODUCCION(
	ID_ORDENPROD INT AUTO_INCREMENT PRIMARY KEY,
    FECHA DATE,
    FK_ID_PMP INT,
	FOREIGN KEY (FK_ID_PMP) REFERENCES PLAN_MAESTRO_PRODUCCION(ID_PMP)
);

CREATE TABLE LINEA_ORDEN(
	ID_LINEAORD INT AUTO_INCREMENT PRIMARY KEY,
    FK_ID_PROD INT,
    FK_ORDEN_PROD INT,
    CANT_PROD INT,
    ESTADO_CALIDAD INT,
	FOREIGN KEY (FK_ID_PROD) REFERENCES PRODUCTO(ID_PROD),
	FOREIGN KEY (FK_ORDEN_PROD) REFERENCES ORDEN_PRODUCCION(ID_ORDENPROD)
);

CREATE TABLE ALMACEN(
	ID_ALMACEN INT AUTO_INCREMENT PRIMARY KEY,
	FK_ID_TRABAJADOR INT,
    DIRECCION VARCHAR(100),
    TIPO VARCHAR(20),
	ACTIVO INT, 
	FOREIGN KEY (FK_ID_TRABAJADOR) REFERENCES TRABAJADOR(ID_TRABAJADOR)
);

CREATE TABLE DETALLE_ALMACEN_INSUMO(
	ID_DET_ALM_INS INT AUTO_INCREMENT PRIMARY KEY,
	FK_ID_INSUMO INT,
	FK_ID_ALMACEN INT,
    NUM_LOTE INT,
    PERIODO DATE,
    STOCK INT,
	CALIDAD INT,
	FOREIGN KEY (FK_ID_INSUMO) REFERENCES INSUMO(ID_INSUMO),
	FOREIGN KEY (FK_ID_ALMACEN) REFERENCES ALMACEN(ID_ALMACEN)
);

CREATE TABLE DETALLE_ALMACEN_PRODUCTO(
	ID_DET_ALM_PROD INT AUTO_INCREMENT PRIMARY KEY,
	FK_ID_PRODUCTO INT,
	FK_ID_ALMACEN INT,
    NUM_LOTE INT,
    PERIODO DATE,
    STOCK INT,
	CALIDAD INT,
	FOREIGN KEY (FK_ID_PRODUCTO) REFERENCES PRODUCTO(ID_PROD),
	FOREIGN KEY (FK_ID_ALMACEN) REFERENCES ALMACEN(ID_ALMACEN)
);

CREATE TABLE POLITICA_DE_STOCK(
	ID_PLT_STOCK INT AUTO_INCREMENT PRIMARY KEY,
    FK_ID_PROD INT,
    CANT_MAX INT,
    CANT_MIN INT,
	FOREIGN KEY (FK_ID_PROD) REFERENCES PRODUCTO(ID_PROD)
);

CREATE TABLE PROYECCION_VENTA(
	ID_PROY_VENTA INT AUTO_INCREMENT PRIMARY KEY,
    PERIODO DATE,
	ACTIVO INT
);

CREATE TABLE LINEA_PROYECCION(
	ID_LIN_PROY INT AUTO_INCREMENT PRIMARY KEY,
    FK_ID_PROD INT,
    CANT INT,
    FK_ID_PROY_VENTA INT,
	FOREIGN KEY (FK_ID_PROD) REFERENCES PRODUCTO(ID_PROD),
	FOREIGN KEY (FK_ID_PROY_VENTA) REFERENCES PROYECCION_VENTA(ID_PROY_VENTA)
);

DROP PROCEDURE IF EXISTS INSERTAR_ALMACEN;
DROP PROCEDURE IF EXISTS ACTUALIZAR_ALMACEN;
DROP PROCEDURE IF EXISTS ELIMINAR_ALMACEN;
DROP PROCEDURE IF EXISTS LISTAR_ALMACEN;
DROP PROCEDURE IF EXISTS INSERTAR_ROL;
DROP PROCEDURE IF EXISTS ACTUALIZAR_ROL;
DROP PROCEDURE IF EXISTS LISTAR_ROL;
DROP PROCEDURE IF EXISTS INSERTAR_USUARIO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_USUARIO;
DROP PROCEDURE IF EXISTS ELIMINAR_USUARIO;
DROP PROCEDURE IF EXISTS LISTAR_USUARIO;
DROP PROCEDURE IF EXISTS INSERTAR_MAQUINARIA;
DROP PROCEDURE IF EXISTS ACTUALIZAR_MAQUINARIA;
DROP PROCEDURE IF EXISTS LISTAR_MAQUINARIA;
DROP PROCEDURE IF EXISTS INSERTAR_TRABAJADOR;
DROP PROCEDURE IF EXISTS ACTUALIZAR_TRABAJADOR;
DROP PROCEDURE IF EXISTS LISTAR_TRABAJADOR;
DROP PROCEDURE IF EXISTS INSERTAR_INSUMO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_INSUMO;
DROP PROCEDURE IF EXISTS LISTAR_INSUMO;
DROP PROCEDURE IF EXISTS INSERTAR_INSTRUCTIVO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_INSTRUCTIVO;
DROP PROCEDURE IF EXISTS LISTAR_INSTRUCTIVO;
DROP PROCEDURE IF EXISTS INSERTAR_PROYECCION;
DROP PROCEDURE IF EXISTS ACTUALIZAR_PROYECCION;
DROP PROCEDURE IF EXISTS ELIMINAR_PROYECCION;
DROP PROCEDURE IF EXISTS LISTAR_PROYECCION;
DROP PROCEDURE IF EXISTS INSERTAR_LINEA_INSUMO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_LINEA_INSUMO;
DROP PROCEDURE IF EXISTS LISTAR_LINEA_INSUMO;
DROP PROCEDURE IF EXISTS INSERTAR_PRODUCTO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_PRODUCTO;
DROP PROCEDURE IF EXISTS LISTAR_PRODUCTOS;
DROP PROCEDURE IF EXISTS INSERTAR_PLAN;
DROP PROCEDURE IF EXISTS ACTUALIZAR_PLAN;
DROP PROCEDURE IF EXISTS LISTAR_PLAN;
DROP PROCEDURE IF EXISTS INSERTAR_DET_MAQUINARIA;
DROP PROCEDURE IF EXISTS ACTUALIZAR_DET_MAQUINARIA;
DROP PROCEDURE IF EXISTS LISTAR_DET_MAQUINARIA;
DROP PROCEDURE IF EXISTS INSERTAR_ORDEN;
DROP PROCEDURE IF EXISTS ACTUALIZAR_ORDEN;
DROP PROCEDURE IF EXISTS LISTAR_ORDEN;
DROP PROCEDURE IF EXISTS INSERTAR_LINEA_ORDEN;
DROP PROCEDURE IF EXISTS ACTUALIZAR_LINEA_ORDEN;
DROP PROCEDURE IF EXISTS LISTAR_LINEA_ORDEN;
DROP PROCEDURE IF EXISTS INSERTAR_DETALLE_INSUMO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_DETALLE_INSUMO;
DROP PROCEDURE IF EXISTS LISTAR_DETALLE_INSUMO;
DROP PROCEDURE IF EXISTS ACTUALIZAR_DETALLE_PRODUCTO;
DROP PROCEDURE IF EXISTS LISTAR_DETALLE_PRODUCTO;
DROP PROCEDURE IF EXISTS INSERTAR_POLITICA;
DROP PROCEDURE IF EXISTS ACTUALIZAR_POLITICA;
DROP PROCEDURE IF EXISTS LISTAR_POLITICA;
DROP PROCEDURE IF EXISTS INSERTAR_LINEA_PROYECCION;
DROP PROCEDURE IF EXISTS ACTUALIZAR_LINEA_PROYECCION;
DROP PROCEDURE IF EXISTS LISTAR_LINEA_PROYECCION;

#---------------------------------------------------------------------------------------------------------------------------------------------------#


DELIMITER $
CREATE PROCEDURE INSERTAR_ALMACEN(
	OUT _ID_ALMACEN INT,
	IN _FK_ID_TRABAJADOR INT,
	IN _DIRECCION VARCHAR(100),
	IN _TIPO VARCHAR(20)
)	
	
BEGIN
	INSERT INTO ALMACEN (FK_ID_TRABAJADOR,DIRECCION,TIPO,ACTIVO) VALUES (_ID_TRABAJADOR,_DIRECCION,_TIPO,1)
	SET _ID_ALMACEN = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_ALMACEN(
	IN _ID_ALMACEN INT,
	IN _ID_TRABAJADOR INT,
	IN _DIRECCION VARCHAR(100),
	IN _TIPO VARCHAR(20)
)
BEGIN
	UPDATE ALMACEN SET ID_TRABAJADOR = _ID_TRABAJADOR , DIRECCION = _DIRECCION, TIPO = _TIPO  WHERE ID_ALMACEN = _ID_ALMACEN;
END$


	
CREATE PROCEDURE ELIMINAR_ALMACEN(
	IN _ID_ALMACEN INT
)
BEGIN
	UPDATE ALMACEN SET ACTIVO = 0 WHERE ID_ALMACEN = _ID_ALMACEN;
END$



CREATE PROCEDURE LISTAR_ALMACEN()
BEGIN
	SELECT * FROM ALMACEN WHERE ACTIVO = 1;
END$
	

#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_ROL(
	OUT _ID_ROL INT,
	IN _DESCRIPCION VARCHAR(50),
)	
BEGIN
	INSERT INTO ROL (DESCRIPCION) VALUES (_DESCRIPCION)
	SET _ID_ROL = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_ROL(
	IN _ID_ROL INT,
	IN _DESCRIPCION VARCHAR(50),
)
BEGIN
	UPDATE ROL SET DESCRIPCION = _DESCRIPCION   WHERE ID_ROL = _ID_ROL;
END$




CREATE PROCEDURE LISTAR_ROL()
BEGIN
	SELECT * FROM ROLES ;
END$


#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_USUARIO(
	OUT _ID_USUARIO INT,
	IN _USERNAME VARCHAR(50),
    IN _CONTRASENA VARCHAR(50),
)	
	
BEGIN
	INSERT INTO USUARIO (USERNAME, CONTRASENA,ACTIVO) VALUES (_USERNAME, _CONTRASENA,1)
	SET _ID_USUARIO = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_USUARIO(
	IN _ID_USUARIO INT,
	IN _USERNAME VARCHAR(50),
    IN _CONTRASENA VARCHAR(50)
)
BEGIN
	UPDATE USUARIO SET USERNAME = _USERNAME, CONTRASENA = _CONTRASENA    WHERE ID_USUARIO = _ID_USUARIO;
END$

CREATE PROCEDURE ELIMINAR_USUARIO(
	IN _ID_USUARIO INT
)
BEGIN
	UPDATE USUARIO SET ACTIVO = 0 WHERE ID_USUARIO = _ID_USUARIO;
END$


CREATE PROCEDURE LISTAR_USUARIO()
BEGIN
	SELECT * FROM USUARIO ;
END$


#---------------------------------------------------------------------------------------------------------------------------------------------------#

CREATE PROCEDURE INSERTAR_MAQUINARIA(
	OUT _ID_MAQUINARIA INT,
    IN _NOMBRE VARCHAR(50),
    IN _TIPO VARCHAR(20)
)	
BEGIN
	INSERT INTO MAQUINARIA (NOMBRE, TIPO) VALUES (_NOMBRE, _TIPO)
	SET _ID_MAQUINARIA = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_MAQUINARIA(
	IN _ID_MAQUINARIA INT,
    IN _NOMBRE VARCHAR(50),
    IN _TIPO VARCHAR(20)
)
BEGIN
	UPDATE MAQUINARIA SET NOMBRE = _NOMBRE, TIPO = _TIPO    WHERE ID_MAQUINARIA = _ID_MAQUINARIA;
END$




CREATE PROCEDURE LISTAR_MAQUINARIA()
BEGIN
	SELECT * FROM MAQUINARIA ;
END$


#---------------------------------------------------------------------------------------------------------------------------------------------------#

CREATE PROCEDURE INSERTAR_TRABAJADOR(
	OUT _ID_TRABAJADOR INT,
	IN _NOMBRES VARCHAR(100),
    IN _APELLIDOS VARCHAR(100),
    IN _DNI VARCHAR(8),
    IN _CORREO VARCHAR(100),
    IN _FK_ID_ROL INT,
    IN _FK_ID_USUARIO INT
)	
	
BEGIN
	INSERT INTO TRABAJADOR (NOMBRE,APELLIDOS,DNI,CORREO,FK_ID_ROL, FK_ID_USUARIO) VALUES (_NOMBRE,_APELLIDOS,_DNI,
	_CORREO,_FK_ID_ROL,_FK_ID_USUARIO)
	SET _ID_TRABAJADOR = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_TRABAJADOR(
	IN _ID_TRABAJADOR INT,
	IN _NOMBRES VARCHAR(100),
    IN _APELLIDOS VARCHAR(100),
    IN _DNI VARCHAR(8),
    IN _CORREO VARCHAR(100),
    IN _FK_ID_ROL INT,
    IN _FK_ID_USUARIO INT
)
BEGIN
	UPDATE TRABAJADOR SET NOMBRES = _NOMBRES , APELLIDOS = _APELLIDOS, DNI = _DNI,
	CORREO = _CORREO, FK_ID_ROL = _FK_ID_ROL, FK_ID_USUARIO = _FK_ID_USUARIO 
	WHERE ID_TRABAJADOR = _ID_TRABAJADOR;
END$


	

CREATE PROCEDURE LISTAR_TRABAJADOR()
BEGIN
	SELECT * FROM TRABAJADOR ;
END$





#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_INSUMO(
	OUT _ID_INSUMO INT ,
    IN _NOMBRE VARCHAR(50),
    IN _GRANULARIDAD FLOAT,
    IN _COLOR VARCHAR(30),
    IN _CANTIDAD FLOAT,
    IN _UNIDAD VARCHAR(20)
)	
	
BEGIN
	INSERT INTO INSUMO (NOMBRE,GRANULARIDAD,COLOR,CANTIDAD,UNIDAD) VALUES (_NOMBRE, _GRANULARIDAD ,_COLOR,
	_CANTIDAD,_UNIDAD)
	SET _ID_INSUMO = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_INSUMO(
	IN _ID_INSUMO INT ,
    IN _NOMBRE VARCHAR(50),
    IN _GRANULARIDAD FLOAT,
    IN _COLOR VARCHAR(30),
    IN _CANTIDAD FLOAT,
    IN _UNIDAD VARCHAR(20)
)
BEGIN
	UPDATE INSUMO SET NOMBRES = _NOMBRES , GRANULARIDAD = _GRANULARIDAD, COLOR = _COLOR,
	CANTIDAD = _CANTIDAD, UNIDAD = _UNIDAD
	WHERE ID_INSUMO = _ID_INSUMO;
END$



CREATE PROCEDURE LISTAR_INSUMO()
BEGIN
	SELECT * FROM INSUMO ;
END$



#---------------------------------------------------------------------------------------------------------------------------------------------------#


CREATE PROCEDURE INSERTAR_INSTRUCTIVO(
	OUT _ID_INSTRUCTIVO INT ,
    IN _ACTIVIDADES VARCHAR(200),
)	
	
BEGIN
	INSERT INTO INSTRUCTIVO (ACTIVIDADES) VALUES (_ACTIVIDADES)
	SET _ID_INSTRUCTIVO = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_INSTRUCTIVO(
	IN _ID_INSTRUCTIVO INT ,
    IN _ACTIVIDADES VARCHAR(200),
)
BEGIN
	UPDATE INSTRUCTIVO SET ACTIVIDADES = _ACTIVIDADES 
	WHERE ID_INSTRUCTIVO = _ID_INSTRUCTIVO;
END$


CREATE PROCEDURE LISTAR_INSTRUCTIVO()
BEGIN
	SELECT * FROM INSTRUCTIVO ;
END$






#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_PROYECCION(
	OUT _ID_PROY_VENTA INT,
    IN _PERIODO DATE
)	
	
BEGIN
	INSERT INTO PROYECCION_VENTA (PERIODO,ACTIVO) VALUES (_PERIODO,1)
	SET _ID_PROY_VENTA = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_PROYECCION(
	IN _ID_PROY_VENTA INT,
    IN _PERIODO DATE
)
BEGIN
	UPDATE PROYECCION_VENTA SET PERIODO = _PERIODO 
	WHERE ID_PROY_VENTA = _ID_PROY_VENTA;
END$


CREATE PROCEDURE ELIMINAR_PROYECCION(
	IN _ID_PROY_VENTA INT
)
BEGIN
	UPDATE PROYECCION_VENTA SET ACTIVO = 0 WHERE ID_PROY_VENTA = _ID_PROY_VENTA;
END$


CREATE PROCEDURE LISTAR_PROYECCION()
BEGIN
	SELECT * FROM PROYECCION_VENTA WHERE ACTIVO = 1;
END$

#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_LINEA_INSUMO(
	OUT _ID_LINEA_INS INT,
    IN _FK_ID_INSUMO INT,
    IN _FK_ID_INSTRUCTIVO INT,
    IN _CANTIDAD INT,
    IN _ESTADO INT
)	
	
BEGIN
	INSERT INTO LINEA_INSUMO (FK_ID_INSUMO, FK_ID_INSTRUCTIVO, CANTIDAD,ESTADO)
	VALUES (_FK_ID_INSUMO, _FK_ID_INSTRUCTIVO,_CANTIDAD, _ESTADO)
	SET _ID_LINEA_INS = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_LINEA_INSUMO(
	IN _ID_LINEA_INS INT,
    IN _FK_ID_INSUMO INT,
    IN _FK_ID_INSTRUCTIVO INT,
    IN _CANTIDAD INT,
    IN _ESTADO INT
)
BEGIN
	UPDATE LINEA_INSUMO SET FK_ID_INSUMO = _FK_ID_INSUMO, FK_ID_INSTRUCTIVO = _FK_ID_INSTRUCTIVO,
	CANTIDAD = _CANTIDAD , ESTADO = _ESTADO
	WHERE ID_LINEA_INS = _ID_LINEA_INS;
END$



CREATE PROCEDURE LISTAR_LINEA_INSUMO()
BEGIN
	SELECT * FROM LINEA_INSUMO ;
END$



#---------------------------------------------------------------------------------------------------------------------------------------------------#


CREATE PROCEDURE INSERTAR_PRODUCTO(
	OUT _ID_PROD INT ,
    IN _NOMBRE VARCHAR(50),
    IN _GRANULARIDAD FLOAT,
    IN _PRESENTACION VARCHAR(40),
    IN _FK_ID_INSTRUCTIVO INT

)
	
BEGIN
	INSERT INTO PRODUCTO (NOMBRE, GRANULARIDAD, PRESENTACION,FK_ID_INSTRUCTIVO)
	VALUES (_NOMBRE,_GRANULARIDAD,_PRESENTACION,_FK_ID_INSTRUCTIVO)
	SET _ID_PROD = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_PRODUCTO(
	IN _ID_PROD INT ,
    IN _NOMBRE VARCHAR(50),
    IN _GRANULARIDAD FLOAT,
    IN _PRESENTACION VARCHAR(40),
    IN _FK_ID_INSTRUCTIVO INT
)
BEGIN
	UPDATE PRODUCTO SET NOMBRE = _NOMBRE, GRANULARIDAD = _GRANULARIDAD,
	PRESENTACION = _PRESENTACION , FK_ID_INSTRUCTIVO = _FK_ID_INSTRUCTIVO
	WHERE ID_PROD = _ID_PROD;
END$



CREATE PROCEDURE LISTAR_PRODUCTOS()
BEGIN
	SELECT A.ID_PROD, A.NOMBRE, A.GRANULARIDAD, A.PRESENTACION,A.FK_ID_INSTRUCTIVO, B.ACTIVIDADES FROM PRODUCTO  A INNER JOIN INSTRUCTIVO B ON 
	A.FK_ID_INSTRUCTIVO = B.ID_INSTRUCTIVO  ;
END$

#---------------------------------------------------------------------------------------------------------------------------------------------------#


CREATE PROCEDURE INSERTAR_PLAN(
	OUT _ID_PMP INT,
    IN _PERIODO DATE,
    IN _ESTADO INT,
    IN _FK_ID_TRABAJADOR INT

)
	
BEGIN
	INSERT INTO PLAN_MAESTRO_PRODUCCION (PERIODO, ESTADO, FK_ID_TRABAJADOR)
	VALUES (_PERIODO, _ESTADO, _FK_ID_TRABAJADOR)
	SET _ID_PMP = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_PLAN(
	IN _ID_PMP INT,
    IN _PERIODO DATE,
    IN _ESTADO INT,
    IN _FK_ID_TRABAJADOR INT
)
BEGIN
	UPDATE PLAN_MAESTRO_PRODUCCION SET PERIODO = _PERIODO, ESTADO = _ESTADO,
	FK_ID_TRABAJADOR = _FK_ID_TRABAJADOR 
	WHERE ID_PMP = _ID_PMP;
END$



CREATE PROCEDURE LISTAR_PLAN()
BEGIN
	SELECT * FROM PLAN_MAESTRO_PRODUCCION ;
END$




#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_DET_MAQUINARIA(
	OUT _ID_DET_MAQ INT ,
	IN _ESTADO INT,
    IN _FECHA DATE,
    IN _FK_ID_PMP INT,
    IN _FK_ID_MAQUINARIA INT

)
	
BEGIN
	INSERT INTO DETALLE_MAQUINARIA (ESTADO, FECHA, FK_ID_PMP,FK_ID_MAQUINARIA)
	VALUES (_ESTADO,_FECHA,_FK_ID_PMP,_FK_ID_MAQUINARIA)
	SET _ID_PROD = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_DET_MAQUINARIA(
	IN _ID_DET_MAQ INT ,
	IN _ESTADO INT,
    IN _FECHA DATE,
    IN _FK_ID_PMP INT,
    IN _FK_ID_MAQUINARIA INT
)
BEGIN
	UPDATE DETALLE_MAQUINARIA SET ESTADO = _ESTADO, FECHA = _FECHA,
	FK_ID_PMP = _FK_ID_PMP , FK_ID_MAQUINARIA = _FK_ID_MAQUINARIA
	WHERE ID_DET_MAQ = _ID_DET_MAQ;
END$



CREATE PROCEDURE LISTAR_DET_MAQUINARIA()
BEGIN
	SELECT * FROM DETALLE_MAQUINARIA ;
END$




#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_ORDEN(
	OUT _ID_ORDENPROD INT ,
    IN _FECHA DATE,
    IN _FK_ID_PMP INT

)
	
BEGIN
	INSERT INTO ORDEN_PRODUCCION (FECHA,FK_ID_PMP)
	VALUES (_FECHA,_FK_ID_PMP)
	SET ID_ORDENPROD = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_ORDEN(
	IN _ID_ORDENPROD INT ,
    IN _FECHA DATE,
    IN _FK_ID_PMP INT
)
BEGIN
	UPDATE ORDEN_PRODUCCION SET FECHA = _FECHA, FK_ID_PMP = _FK_ID_PMP
	WHERE ID_ORDENPROD = _ID_ORDENPROD;
END$



CREATE PROCEDURE LISTAR_ORDEN()
BEGIN
	SELECT * FROM ORDEN_PRODUCCION ;
END$


#---------------------------------------------------------------------------------------------------------------------------------------------------#




CREATE PROCEDURE INSERTAR_LINEA_ORDEN(
	OUT _ID_LINEAORD INT,
    IN _FK_ID_PROD INT,
    IN _FK_ORDEN_PROD INT,
    IN _CANT_PROD INT,
    IN _ESTADO_CALIDAD INT,

)
	
BEGIN
	INSERT INTO LINEA_ORDEN (FK_ID_PROD,FK_ORDEN_PROD,CANT_PROD,ESTADO_CALIDAD)
	VALUES (_FK_ID_PROD,_FK_ORDEN_PROD,_CANT_PROD,_ESTADO_CALIDAD)
	SET ID_LINEAORD = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_LINEA_ORDEN(
	IN _ID_LINEAORD INT,
    IN _FK_ID_PROD INT,
    IN _FK_ORDEN_PROD INT,
    IN _CANT_PROD INT,
    IN _ESTADO_CALIDAD INT,
)
BEGIN
	UPDATE LINEA_ORDEN SET FK_ID_PROD = _FK_ID_PROD, FK_ORDEN_PROD = _FK_ORDEN_PROD,
	CANT_PROD = _CANT_PROD, ESTADO_CALIDAD = _ESTADO_CALIDAD
	WHERE ID_LINEAORD = _ID_LINEAORD;
END$



CREATE PROCEDURE LISTAR_LINEA_ORDEN()
BEGIN
	SELECT * FROM LINEA_ORDEN ;
END$


#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_DETALLE_INSUMO(
	OUT _ID_DET_ALM_INS INT ,
	IN _FK_ID_INSUMO INT,
	IN _FK_ID_ALMACEN INT,
    IN _NUM_LOTE INT,
    IN _PERIODO DATE,
    IN _STOCK INT,
	IN _CALIDAD INT

)
	
BEGIN
	INSERT INTO DETALLE_ALMACEN_INSUMO (FK_ID_INSUMO,FK_ID_ALMACEN,NUM_LOTE,PERIODO, STOCK,CALIDAD)
	VALUES ( _FK_ID_INSUMO, _FK_ID_ALMACEN, _NUM_LOTE, _PERIODO, _STOCK, _CALIDAD)
	SET _ID_DET_ALM_INS = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_DETALLE_INSUMO(
	IN _ID_DET_ALM_INS INT ,
	IN _FK_ID_INSUMO INT,
	IN _FK_ID_ALMACEN INT,
    IN _NUM_LOTE INT,
    IN _PERIODO DATE,
    IN _STOCK INT,
	IN _CALIDAD INT
)
BEGIN
	UPDATE DETALLE_ALMACEN_INSUMO SET FK_ID_INSUMO = _FK_ID_INSUMO, FK_ID_ALMACEN = _FK_ID_ALMACEN,
	NUM_LOTE = _NUM_LOTE, PERIODO = _PERIODO, STOCK = _STOCK, CALIDAD = _CALIDAD
	WHERE ID_DET_ALM_INS = _ID_DET_ALM_INS;
END$



CREATE PROCEDURE LISTAR_DETALLE_INSUMO()
BEGIN
	SELECT * FROM DETALLE_ALMACEN_INSUMO ;
END$





#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_DETALLE_PRODUCTO(
	OUT _ID_DET_ALM_PROD INT,
	IN _FK_ID_PRODUCTO INT,
	IN _FK_ID_ALMACEN INT,
    IN _NUM_LOTE INT,
    IN _PERIODO DATE,
    IN _STOCK INT,
	IN _CALIDAD INT,

)
	
BEGIN
	INSERT INTO DETALLE_ALMACEN_PRODUCTO (FK_ID_PRODCUTO,FK_ID_ALMACEN,NUM_LOTE,PERIODO, STOCK,CALIDAD)
	VALUES ( _FK_ID_INSUMO, _FK_ID_ALMACEN, _NUM_LOTE, _PERIODO, _STOCK, _CALIDAD)
	SET _ID_DET_ALM_PROD = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_DETALLE_PRODUCTO(
	IN _ID_DET_ALM_PROD INT ,
	IN _FK_ID_PRODUCTO INT,
	IN _FK_ID_ALMACEN INT,
    IN _NUM_LOTE INT,
    IN _PERIODO DATE,
    IN _STOCK INT,
	IN _CALIDAD INT,
)
BEGIN
	UPDATE DETALLE_ALMACEN_PRODUCTO SET FK_ID_PRODUCTO = _FK_ID_PRODUCTO, FK_ID_ALMACEN = _FK_ID_ALMACEN,
	NUM_LOTE = _NUM_LOTE, PERIODO = _PERIODO, STOCK = _STOCK, CALIDAD = _CALIDAD
	WHERE ID_DET_ALM_INS = _ID_DET_ALM_INS;
END$



CREATE PROCEDURE LISTAR_DETALLE_PRODUCTO()
BEGIN
	SELECT * FROM DETALLE_ALMACEN_PRODUCTO ;
END$



#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_POLITICA(
	OUT _ID_PLT_STOCK INT,
    IN _FK_ID_PROD INT,
    IN _CANT_MAX INT,
    IN _CANT_MIN INT

)
	
BEGIN
	INSERT INTO POLITICA_DE_STOCK (FK_ID_PROD,CANT_MAX,CANT_MIN)
	VALUES (_FK_ID_PROD,_CANT_MAX,_CANT_MIN)
	SET _ID_PLT_STOCK = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_POLITICA(
	IN _ID_PLT_STOCK INT,
    IN _FK_ID_PROD INT,
    IN _CANT_MAX INT,
    IN _CANT_MIN INT
)
BEGIN
	UPDATE POLITICA_DE_STOCK SET FK_ID_PROD = _FK_ID_PROD, CANT_MAX = _CANT_MAX,
	CANT_MIN = _CANT_MIN
	WHERE ID_PLT_STOCK = _ID_PLT_STOCK;
END$



CREATE PROCEDURE LISTAR_POLITICA()
BEGIN
	SELECT * FROM POLITICA_DE_STOCK ;
END$


#---------------------------------------------------------------------------------------------------------------------------------------------------#



CREATE PROCEDURE INSERTAR_LINEA_PROYECCION(
	OUT _ID_LIN_PROY INT,
    IN _FK_ID_PROD INT,
    IN _CANT INT,
    IN _FK_ID_PROY_VENTA INT

)
	
BEGIN
	INSERT INTO LINEA_PROYECCION (FK_ID_PROD,CANT,FK_ID_PROY_VENTA)
	VALUES (_FK_ID_PROD,_CANT,_FK_ID_PROY_VENTA)
	SET ID_LIN_PROY = last_insert_id();
END&



CREATE PROCEDURE ACTUALIZAR_LINEA_PROYECCION(
	IN _ID_LIN_PROY INT,
    IN _FK_ID_PROD INT,
    IN _CANT INT,
    IN _FK_ID_PROY_VENTA INT
)
BEGIN
	UPDATE LINEA_PROYECCION SET FK_ID_PROD = _FK_ID_PROD, CANT = _CANT,
	FK_ID_PROY_VENTA = _FK_ID_PROY_VENTA
	WHERE ID_LIN_PROY = _ID_LIN_PROY;
END$



CREATE PROCEDURE LISTAR_LINEA_PROYECCION()
BEGIN
	SELECT * FROM LINEA_PROYECCION ;
END$




